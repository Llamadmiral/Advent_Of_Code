package com.aoc.util.modulefactory;

/**
 * @author maczaka.
 */
class FileTemplate {
    static final String SOLUTION_BASE_TEMPLATE = "package com.aoc.days.%s;\n"
        + "\n"
        + "import com.aoc.solutionbase.SolutionBase;\n"
        + "\n"
        + "/**\n"
        + " * @author Llamadmiral.\n"
        + " */\n"
        + "public class Solution%s extends SolutionBase {\n"
        + "    protected Solution%s(final String day) {\n"
        + "        super(day);\n"
        + "    }\n"
        + "\n"
        + "    @Override\n"
        + "    protected void solvePartOne() {\n"
        + "        //not yet solved\n"
        + "    }\n"
        + "\n"
        + "    @Override\n"
        + "    protected void solvePartTwo() {\n"
        + "       //not yet solved\n"
        + "    }\n"
        + "}";

    static final String DAY_BASE_TEMPLATE = "package com.aoc.days.%s;\n"
        + "\n"
        + "import com.aoc.daybase.DayBase;\n"
        + "import com.aoc.solutionbase.SolutionBase;\n"
        + "import com.aoc.util.reader.Reader;\n"
        + "\n"
        + "/**\n"
        + " * @author Llamadmiral.\n"
        + " */\n"
        + "public class Day%s extends DayBase {\n"
        + "\n"
        + "    private static final String DAY_NR = \"%s\";\n"
        + "\n"
        + "    public Day%s() {\n"
        + "        dayNr = DAY_NR;\n"
        + "        solution = new SolutionOne(DAY_NR);\n"
        + "        solution.setInput(Reader.readFromInput(\"%s.txt\"));\n"
        + "    }\n"
        + "\n"
        + "    @Override\n"
        + "    public SolutionBase getSolutionForTest() {\n"
        + "        return new Solution%s(DAY_NR);\n"
        + "    }\n"
        + "\n"
        + "    @Override\n"
        + "    public String[] getTestInputs() {\n"
        + "        return new String[]{}\n"
        + "}";

    static final String YEAR_BASE_TEMPLATE = "package com.aoc;\n"
        + "\n"
        + "import com.aoc.days.day01.DayOne;\n"
        + "import com.aoc.days.day02.DayTwo;\n"
        + "import com.aoc.days.day03.DayThree;\n"
        + "import com.aoc.days.day04.DayFour;\n"
        + "import com.aoc.days.day05.DayFive;\n"
        + "import com.aoc.days.day06.DaySix;\n"
        + "import com.aoc.days.day07.DaySeven;\n"
        + "import com.aoc.days.day08.DayEight;\n"
        + "import com.aoc.days.day09.DayNine;\n"
        + "import com.aoc.days.day10.DayTen;\n"
        + "import com.aoc.days.day11.DayEleven;\n"
        + "import com.aoc.days.day12.DayTwelve;\n"
        + "import com.aoc.days.day13.DayThirteen;\n"
        + "import com.aoc.days.day14.DayFourteen;\n"
        + "import com.aoc.days.day15.DayFifteen;\n"
        + "import com.aoc.days.day16.DaySixteen;\n"
        + "import com.aoc.days.day17.DaySeventeen;\n"
        + "import com.aoc.days.day18.DayEighteen;\n"
        + "import com.aoc.days.day19.DayNineteen;\n"
        + "import com.aoc.days.day20.DayTwenty;\n"
        + "import com.aoc.days.day21.DayTwentyOne;\n"
        + "import com.aoc.days.day22.DayTwentyTwo;\n"
        + "import com.aoc.days.day23.DayTwentyThree;\n"
        + "import com.aoc.days.day24.DayTwentyFour;\n"
        + "import com.aoc.days.day25.DayTwentyFive;\n"
        + "import com.aoc.yearbase.YearBase;\n"
        + "\n"
        + "/**\n"
        + " * @author Llamadmiral.\n"
        + " */\n"
        + "public class Year%s extends YearBase {\n"
        + "\n"
        + "    public Year%s() {\n"
        + "        this.year = %s;\n"
        + "    }\n"
        + "\n"
        + "    @Override\n"
        + "    protected void printDays() {\n"
        + "        printDay(new DayOne());\n"
        + "        printDay(new DayTwo());\n"
        + "        printDay(new DayThree());\n"
        + "        printDay(new DayFour());\n"
        + "        printDay(new DayFive());\n"
        + "        printDay(new DaySix());\n"
        + "        printDay(new DaySeven());\n"
        + "        printDay(new DayEight());\n"
        + "        printDay(new DayNine());\n"
        + "        printDay(new DayTen());\n"
        + "        printDay(new DayEleven());\n"
        + "        printDay(new DayTwelve());\n"
        + "        printDay(new DayThirteen());\n"
        + "        printDay(new DayFourteen());\n"
        + "        printDay(new DayFifteen());\n"
        + "        printDay(new DaySixteen());\n"
        + "        printDay(new DaySeventeen());\n"
        + "        printDay(new DayEighteen());\n"
        + "        printDay(new DayNineteen());\n"
        + "        printDay(new DayTwenty());\n"
        + "        printDay(new DayTwentyOne());\n"
        + "        printDay(new DayTwentyTwo());\n"
        + "        printDay(new DayTwentyThree());\n"
        + "        printDay(new DayTwentyFour());\n"
        + "        printDay(new DayTwentyFive());\n"
        + "    }\n"
        + "}\n";

    private FileTemplate() {
        //nope
    }
}
